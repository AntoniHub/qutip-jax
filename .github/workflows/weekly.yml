# The name is short because we mostly care how it appears in the pull request
# "checks" dialogue box - it looks like
#     Tests / ubuntu-latest, python-3.9, defaults
# or similar.
name: Weekly

on:
  schedule:
    - cron: "0 12 * * 0"  # Every Sunday at noon UTC

  workflow_dispatch:
    inputs:
      email:
        description: "Destination email on failure (optional):"
        default: "None"

defaults:
  run:
    # The slightly odd shell call is to force bash to read .bashrc, which is
    # necessary for having conda behave sensibly.  We use bash as the shell even
    # on Windows, since we don't run anything much complicated, and it makes
    # things much simpler.
    shell: bash -l {0}

jobs:
  cases:
    if: github.repository == 'qutip/qutip-jax'
    name: ${{ matrix.os }}, ${{ matrix.case-name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
        case-name: [defaults]

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Install QuTiP from GitHub
        run: |
          python -mpip install git+https://github.com/qutip/qutip.git@master
          python -c 'import qutip; qutip.about()'

      - name: Install qutip-jax and dependencies
        # Install in editable mode so Coveralls detects the tree structure
        # relative to the git repository root as well.
        run: |
            python -mpip install -e .[full]

      - name: Package information
        run: |
          conda list
          python -c 'import qutip_jax; print(qutip_jax.__version__)'

      - name: Run tests
        # If our tests are running for longer than an hour, _something_ is wrong
        # somewhere.  The GitHub default is 6 hours, which is a bit long to wait
        # to see if something hung.
        timeout-minutes: 60
        run: |
          pytest --durations=0 --durations-min=1.0 --verbosity=1 --color=yes -W ignore::UserWarning:qutip -W "ignore:Complex dtype:UserWarning"
          # Above flags are:
          #  --durations=0 --durations-min=1.0
          #     at the end, show a list of all the tests that took longer than a
          #     second to run
          #  --verbosity=1
          #     turn the verbosity up so pytest prints the names of the tests
          #     it's currently working on
          #  --cov=qutip_jax
          #     limit coverage reporting to code that's within the qutip_jax package
          #  --color=yes
          #     force coloured output in the terminal
          #  -W ignore::UserWarning:qutip
          #     Ignore matplotlib missing warnings
          # These flags are added to those in pyproject.toml.

  finalise:
    needs: cases
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Check destination
        id: dest_email
        run: |
          if [[ -z "${{ inputs.email }}" ]]; then
            # Trigerred by schedule
            echo "destination='qutip-admin@googlegroups.com' " >> $GITHUB_OUTPUT;
          elif [[ "${{ inputs.email }}" != "None" ]]; then
            # Trigerred manually with email entered
            echo "destination=${{ inputs.email }}" >> $GITHUB_OUTPUT;
          else
            # Trigerred manually without email entered
            echo "destination=" >> $GITHUB_OUTPUT;
          fi

      - name: Send Email on Failure
        # No email sent if trigerred manually and no address is provided.
        if: ${{ steps.dest_email.outputs.destination }} != ""

        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address if not connection_url:
          server_address: smtp-mail.outlook.com
          server_port: 587
          secure: False
          # Optional (recommended) mail server username:
          username: ${{ secrets.OUTLOOK_ADR }}
          # Optional (recommended) mail server password:
          password: ${{ secrets.OUTLOOK_PWD }}
          # Required mail subject:
          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
          # Required recipients' addresses:
          to: ${{ steps.dest_email.outputs.destination }}
          # Required sender full name (address can be skipped):
          from: QuTiP-Jax
          # Optional plain body:
          body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
